plugins {
	id 'com.android.application'
	id 'org.jetbrains.kotlin.android'
	id "dagger.hilt.android.plugin"
	id "kotlin-kapt"
}

android {
	compileSdk 32

	defaultConfig {
		applicationId "com.hassan.fundingsouqtest"
		minSdk 26
		targetSdk 32
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	compileOptions {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	kotlinOptions {
		jvmTarget = "1.8"
	}
}

dependencies {
	def retrofitVersion = "2.9.0"
	def gsonVersion = "2.8.6"
	def okHttpLogger = "4.9.1"
	def recyclerViewVersion = "1.2.1"
	def glideVersion = "4.12.0"
	def dataStoreVersion = "1.0.0"
	def coroutine_version = "1.3.9"
	def hilt_version = "2.38.1"
	def lifecycle_version = "2.4.1"
	def arch_version = "2.1.0"
	def fragment_ktx_version = "1.4.1"

	implementation 'androidx.legacy:legacy-support-v4:1.0.0'
	implementation 'androidx.core:core-ktx:1.7.0'
	implementation 'androidx.appcompat:appcompat:1.4.1'
	implementation 'com.google.android.material:material:1.5.0'
	implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation 'androidx.test.ext:junit:1.1.3'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
	implementation 'androidx.fragment:fragment-ktx:1.4.1'

	//Retrofit
	implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
	implementation "com.google.code.gson:gson:${gsonVersion}"
	implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
	implementation "com.squareup.okhttp3:logging-interceptor:${okHttpLogger}"

	//RecyclerView
	//recyclerview
	implementation "androidx.recyclerview:recyclerview:${recyclerViewVersion}"


	//Glide
	implementation "com.github.bumptech.glide:glide:${glideVersion}"
	kapt "com.github.bumptech.glide:compiler:${glideVersion}"

	//data store
	implementation("androidx.datastore:datastore:${dataStoreVersion}")
	implementation("androidx.datastore:datastore-preferences:${dataStoreVersion}")

	//coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

	implementation "com.google.dagger:hilt-android:$hilt_version"
	kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
	kapt 'androidx.hilt:hilt-compiler:1.0.0'

	implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

	// Annotation processor
//    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
	// alternately - if using Java8, use the following instead of lifecycle-compiler
	implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

	// optional - helpers for implementing LifecycleOwner in a Service
	implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")

	// optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
	implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")
	// optional - ReactiveStreams support for LiveData
	implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")
	// optional - Test helpers for LiveData
	testImplementation("androidx.arch.core:core-testing:$arch_version")




}